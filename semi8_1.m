% 定値外乱を考慮した状態フィードバックシステムのプログラム
% ワークスペースの初期化
clear
% ===============================
% 機械系モデルの行列A, Bが含む変数
b = 1;
j = 1;
% 機械系モデルの行列A, B
A = [0, 1; 0, -b / j];
B = [0; 1 / j];
% ===============================
% 閉ループ系の極
lambda1 = -1; lambda2 = -1;
% ===============================
% 状態FB則の定義
k1 = lambda1 * lambda2 * j; k2 = - b - (lambda1 + lambda2) * j; 
K = [k1, k2];
% ===============================
C = [1, 0];
t0 = 0;
tf = 10;
T = linspace(t0, tf, 101);
x0 = [3; 3];
us = @(t) 2;
y = @(x) C * x;
H = [5; 5];
d0 = 1;
% ===============================
% 定値外乱を考慮した状態FBシステム
f_fb = @(t, x) (A - B * K) * x - B * d0;
[t, x1] = ode45(@(t, x) f_fb(t, x), T, x0);
% 定値外乱を考慮しない状態FBシステム
f_sys = @(t, x) (A - B * K) * x;
[t1, x2] = ode45(@(t, x) f_sys(t, x), T, x0);
% ===============================
% 誤差の計算
e = x1 - x2;
% ===============================
% グラフにプロット
% 状況によって角度から速度に変更
hold on
plot(T, x1(:,1), '-o');
plot(T, x2(:,1), '-x');
legend('状態x1の速度omega1(t)', '状態x2の速度omega2(t)');
xlim([0 10]);
ylim([-1 10]);
xlabel('time (s)');
ylabel('omega(t)');
hold off
% ===============================

